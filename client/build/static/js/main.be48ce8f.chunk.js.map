{"version":3,"sources":["components/Question.jsx","components/Register.jsx","components/Login.jsx","components/Navbar.jsx","components/GameOver.jsx","components/LogOut.jsx","components/Accounts.jsx","App.js","index.js"],"names":["start","stop","result","Question","props","Date","getTime","stringConvert","str","text","document","createElement","innerHTML","value","settingCard","a","questions","state","next","setState","questioncard","category","question","correct_answer","incorrect_answers","map","txt","options","sort","Math","random","handleSave","getElementById","style","display","save","answered","answer","correct","correct_id","indexOf","answer_id","backgroundColor","handleNext","answers","length","ceil","alert","timeTaken","gameoverRedirect","handleAnswer","ans","this","location","user","login","axios","get","then","res","data","catch","err","className","color","height","width","alignContent","id","role","option","index","key","onClick","e","exact","to","pathname","Component","Register","changeEmail","email","target","changeName","name","changePassword","password","pwdReveal","type","onSubmit","preventDefault","register","post","redirect","required","onChange","Login","status","points","Navbar","textDecoration","textAlign","GameOver","goBackToGame","goToAccounts","accounts","currentPoints","put","marginTop","fontWeight","LogOut","logOut","Accounts","changeRoute","float","App","path","render","ReactDOM"],"mappings":"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","file":"static/js/main.be48ce8f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nlet start, stop, result, unit\r\n\r\nclass Question extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            questions: [],\r\n            questioncard: { category: '', question: '', correct_answer: '', incorrect_answers: [] },\r\n            options: [],\r\n            answer: '',\r\n            save: { question: '', answered: '', correct: '' },\r\n            next: 0,\r\n            answers: [],\r\n            gameoverRedirect: '/quiz'\r\n        }\r\n        this.answer = 0\r\n    }\r\n\r\n    start = () => {\r\n        return new Date().getTime()\r\n    }\r\n\r\n    stop = () => {\r\n        return new Date().getTime()\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n\r\n            if (this.props.location.user.login) {\r\n                await axios.get(`http://localhost:4000/quiz`)\r\n                    .then(async res => {\r\n                        start = this.start()\r\n                        await this.setState({\r\n                            questions: [...res.data]\r\n                        })\r\n                        this.settingCard()\r\n                    })\r\n                    .catch(err => alert(err))\r\n            } else {\r\n                await this.setState({\r\n                    gameoverRedirect: '/login'\r\n                })\r\n            }\r\n        } catch (err) {\r\n            await this.setState({\r\n                gameoverRedirect: '/login'\r\n            })\r\n            alert('Cannot Access Unless Logged In!')\r\n        }\r\n\r\n    }\r\n\r\n    stringConvert = (str) => {\r\n        const text = document.createElement('textarea')\r\n        text.innerHTML = str\r\n\r\n        return text.value\r\n    }\r\n\r\n    settingCard = async () => {\r\n        let questions = this.state.questions[this.state.next]\r\n        await this.setState({\r\n            questioncard: {\r\n                category: this.stringConvert(questions.category),\r\n                question: this.stringConvert(questions.question),\r\n                correct_answer: this.stringConvert(questions.correct_answer),\r\n                incorrect_answers: [...questions.incorrect_answers.map(txt => this.stringConvert(txt))]\r\n            }\r\n        })\r\n\r\n        await this.setState({\r\n            options: [this.state.questioncard.correct_answer, ...this.state.questioncard.incorrect_answers].sort(() => Math.random() - 0.5)\r\n        })\r\n\r\n    }\r\n\r\n    handleSave = async () => {\r\n        document.getElementById('save').style.display = 'none'\r\n        await this.setState({\r\n            save: {\r\n                question: this.state.questioncard.question,\r\n                answered: this.state.answer,\r\n                correct: this.state.questioncard.correct_answer\r\n            }\r\n        })\r\n\r\n        let correct_id = this.state.options.indexOf(this.state.save.correct)\r\n        let answer_id = this.state.options.indexOf(this.state.save.answered)\r\n\r\n        if (correct_id === answer_id) {\r\n            document.getElementById(answer_id).style.backgroundColor = '#90f5ab'\r\n        } else {\r\n            document.getElementById(correct_id).style.backgroundColor = '#90f5ab'\r\n            document.getElementById(answer_id).style.backgroundColor = '#ed7474'\r\n        }\r\n\r\n\r\n        document.getElementById('next').style.display = 'block'\r\n    }\r\n\r\n    handleNext = async () => {\r\n\r\n        this.answer = 0\r\n\r\n        let correct_id = this.state.options.indexOf(this.state.save.correct)\r\n        let answer_id = this.state.options.indexOf(this.state.save.answered)\r\n\r\n        if (correct_id === answer_id) {\r\n            document.getElementById(answer_id).style.backgroundColor = ''\r\n        } else {\r\n            document.getElementById(correct_id).style.backgroundColor = ''\r\n            document.getElementById(answer_id).style.backgroundColor = ''\r\n        }\r\n\r\n        await this.setState({\r\n            answers: [...this.state.answers, this.state.save]\r\n        })\r\n\r\n        await this.setState({\r\n            save: {\r\n                question: '',\r\n                answered: '',\r\n                correct: ''\r\n            }\r\n        })\r\n\r\n        await this.setState({\r\n            answer: ''\r\n        })\r\n\r\n        await this.setState({\r\n            next: this.state.next + 1\r\n        })\r\n\r\n        if (this.state.next < this.state.questions.length) {\r\n            document.getElementById('next').style.display = 'none'\r\n            this.settingCard()\r\n        }\r\n        else {\r\n            stop = this.stop()\r\n            result = Math.ceil((stop - start) / 1000)\r\n\r\n            if(result > 60){\r\n                result = Math.ceil(result / 60)\r\n                unit = result > 1 ? 'minutes' : 'minute'\r\n                result = result + ' ' + unit\r\n            }else{\r\n                unit = result > 1 ? 'seconds' : 'second'\r\n                result = result + ' ' + unit\r\n            }\r\n\r\n            alert('Game Over!')\r\n\r\n            await this.setState({\r\n                timeTaken: result\r\n            })\r\n\r\n            await this.setState({\r\n                gameoverRedirect: '/gameover'\r\n            })\r\n        }\r\n    }\r\n\r\n    handleAnswer = async (ans) => {\r\n        this.answer += 1\r\n        await this.setState({\r\n            answer: ans\r\n        })\r\n        if (this.answer === 1) {\r\n            document.getElementById('save').style.display = 'block'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { questioncard, options } = this.state\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-dark m-2\" style={{ color: 'white' }}>Quiz Game\r\n                </nav>\r\n\r\n                <div className=\"card container-fluid\" style={{ height: '30rem', width: '25rem', alignContent: 'center', backgroundColor: '#dedfe0'}}>\r\n                    <div className=\"card-body\" style={{ height: '50rem' }}>\r\n                        <h5 className=\"card-title\">{questioncard.category}</h5>\r\n                        <p className=\"card-text\">{questioncard.question}</p>\r\n                        <div className=\"list-group container-fluid\" id=\"list-tab\" role=\"tablist\">\r\n                            {options.map((option, index) => {\r\n                                return (\r\n                                    <button id={index} key={index} className=\"btn btn-light m-2\" onClick={e => this.handleAnswer(option)}>{option}</button>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                        <div >\r\n                            <div id=\"save\" style={{ display: 'none' }}>\r\n                                <button className=\"btn btn-success m-2\" onClick={e => this.handleSave()}>save</button>\r\n                            </div>\r\n                            <div id=\"next\" style={{ display: 'none' }}>\r\n                                <button className=\"btn btn-primary\" onClick={e => this.handleNext()}>next</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <Redirect exact to={{\r\n                    pathname: this.state.gameoverRedirect,\r\n                    timeTaken: this.state.timeTaken,\r\n                    answers: [...this.state.answers],\r\n                    user: this.props.location.user\r\n                }}></Redirect>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Question","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            redirect: '/register'\r\n        }\r\n    }\r\n\r\n\r\n    changeEmail = async (e) => {\r\n        await this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    changeName = async (e) => {\r\n        await this.setState({\r\n            name: e.target.value\r\n        })\r\n    }\r\n\r\n    changePassword = async (e) => {\r\n        await this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    pwdReveal = () => {\r\n        let id = document.getElementById('pwd');\r\n        if (id.type === \"password\") {\r\n            id.type = \"text\";\r\n        } else {\r\n            id.type = \"password\";\r\n        }\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const register = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        await axios.post(`http://localhost:4000/register`, register)\r\n            .then(async res => {\r\n                alert(res.data)\r\n                if (res.data === 'Registered Successfully!') {\r\n                    await this.setState({\r\n                        redirect: '/login'\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => alert(err))\r\n\r\n        await this.setState({\r\n            name: '',\r\n            email: '',\r\n            password: ''\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\" style={{ color: 'white' }}>Register</nav>\r\n                <div className=\"row m-2\">\r\n                    <div className=\"col-4\"></div>\r\n                    <div className=\"col-4\">\r\n                        <form onSubmit={e => this.onSubmit(e)}>\r\n                            <div className=\"form-group\">\r\n                                <label>Name</label>\r\n                                <input type=\"text\" required className=\"form-control\" onChange={e => this.changeName(e)} value={this.state.name} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Email address</label>\r\n                                <input type=\"email\" required className=\"form-control\" onChange={e => this.changeEmail(e)} value={this.state.email} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Password: </label>\r\n                                <input id=\"pwd\" type=\"password\" required className=\"form-control\" onChange={e => this.changePassword(e)} value={this.state.password} />\r\n                            </div>\r\n                            <div className=\"form-group form-check\">\r\n                                <input onClick={this.pwdReveal} type=\"checkbox\" className=\"form-check-input\" />\r\n                                <label className=\"form-check-label\">Show Password</label>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n                        </form>\r\n                If already registered click this link - <Link to={{ pathname: '/login' }}>Login</Link>\r\n                    </div>\r\n                    <div className=\"col-4\"></div>\r\n                </div>\r\n                <Redirect exact to={{ pathname: this.state.redirect, state: { login: this.props.login } }}>\r\n                </Redirect>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            redirect: '/login'\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.setState({\r\n            login: this.props.login\r\n        })\r\n    }\r\n\r\n    changeEmail = async (e) => {\r\n        await this.setState({\r\n            email: e.target.value\r\n        })\r\n    }\r\n\r\n    changePassword = async (e) => {\r\n        await this.setState({\r\n            password: e.target.value\r\n        })\r\n    }\r\n\r\n    pwdReveal = () => {\r\n        let id = document.getElementById('pwd');\r\n        if (id.type === \"password\") {\r\n            id.type = \"text\";\r\n        } else {\r\n            id.type = \"password\";\r\n        }\r\n    }\r\n\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        const login = {\r\n            email: this.state.email,\r\n            password: this.state.password\r\n        }\r\n\r\n        await axios.post(`http://localhost:4000/login`, login)\r\n            .then(async res => {\r\n                if (res.status === 200) {\r\n                    await this.setState({\r\n                        user: {\r\n                            email: res.data.email,\r\n                            login: true,\r\n                            points: res.data.points\r\n                        },\r\n                        login: true,\r\n                        redirect: '/accounts'\r\n                    })\r\n                    alert('Logged In')\r\n                } else {\r\n                    alert('Incorrect email or password!')\r\n                }\r\n            })\r\n            .catch(err => alert('Incorrect email or password!'))\r\n\r\n        await this.setState({\r\n            email: '',\r\n            password: ''\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\" style={{ color: 'white' }}>Login</nav>\r\n                <div className=\"row m-2\">\r\n                    <div className=\"col-4\"></div>\r\n                    <div className=\"col-4\">\r\n                        <form onSubmit={e => this.onSubmit(e)}>\r\n                            <div className=\"form-group\">\r\n                                <label>Email address</label>\r\n                                <input type=\"email\" required className=\"form-control\" onChange={e => this.changeEmail(e)} value={this.state.email} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Password: </label>\r\n                                <input id=\"pwd\" type=\"password\" required className=\"form-control\" onChange={e => this.changePassword(e)} value={this.state.password} />\r\n                            </div>\r\n                            <div className=\"form-group form-check\">\r\n                                <input onClick={this.pwdReveal} type=\"checkbox\" className=\"form-check-input\" />\r\n                                <label className=\"form-check-label\">Show Password</label>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n                        </form>\r\n                If not already registered click this link - <Link to={{\r\n                            pathname: '/register'\r\n                        }}>Register</Link>\r\n                    </div>\r\n                    <div className=\"col-4\"></div>\r\n                </div>\r\n                <Redirect exact to={{\r\n                    pathname: this.state.redirect,\r\n                    user: this.state.user,\r\n                    name: 'hello'\r\n                }}>\r\n                </Redirect>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Navbar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <li className=\"navbar-brand\" >Quiz</li>\r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <div className=\"navbar-nav\">\r\n                            <li className=\"nav-item nav-link\" ><Link style={{textDecoration: 'none', color: 'white'}} to={{pathname: '/login', state: {login: this.props.login}}}>Login</Link></li>\r\n                            <li className=\"nav-item nav-link\" ><Link style={{textDecoration: 'none', color: 'white'}} to={{pathname: '/register', state: {login: this.props.login}}}>Register</Link></li>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n                <div>\r\n                    <h1 className=\"display-1\" style={{textAlign: 'center'}}>WELCOME</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nclass GameOver extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            answers: [],\r\n            currentPoints: 0,\r\n            redirect: '/gameover',\r\n            accounts: '/gameover'\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        try {\r\n            if (this.props.location.answers) {\r\n\r\n                await this.setState({\r\n                    answers: [...this.props.location.answers]\r\n                })\r\n\r\n                for (let ans of this.state.answers) {\r\n                    if (ans.correct === ans.answered) {\r\n                        await this.setState({\r\n                            currentPoints: this.state.currentPoints + 1\r\n                        })\r\n                    }\r\n                }\r\n\r\n                await axios.put(`http://localhost:4000/gameover/${this.props.location.user.email}/${this.props.location.user.points + this.state.currentPoints}`)\r\n                    .then()\r\n                    .catch(err => alert(err))\r\n            } else {\r\n                this.goBackToGame()\r\n            }\r\n        } catch (err) {\r\n            await this.setState({\r\n                login: false\r\n            })\r\n            alert('Page not Accessible!')\r\n            this.goBackToGame()\r\n        }\r\n\r\n    }\r\n\r\n    goBackToGame = async () => {\r\n        await this.setState({\r\n            redirect: '/quiz'\r\n        })\r\n    }\r\n\r\n    goToAccounts = async () => {\r\n        await this.setState({\r\n            accounts: '/accounts'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { answers } = this.state\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-dark\" style={{ color: 'white' }}>Game Over\r\n                <button className=\"nav-item nav-link btn\" onClick={this.goToAccounts} style={{ textDecoration: 'none', color: 'white' }}>Accounts</button>\r\n                </nav>\r\n                <div className=\"row m-2\">\r\n                    <div className=\"row col-12\">\r\n                        <div className=\"col-3\"></div>\r\n                        <div className=\"col-3\">\r\n                            <h5>Game Points : {this.state.currentPoints}</h5>\r\n                            <button className=\"btn btn-success\" onClick={this.goBackToGame}>Play Again</button>\r\n                            <h6 style={{marginTop: '2px'}}>Time Taken : {this.props.location.timeTaken}</h6>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                                <div className=\"card container-fluid\" style={{ width: \"10rem\" , backgroundColor: '#dedfe0'}}>\r\n                                    <div className=\"card-body\">\r\n                                         <p className=\"card-text\" style={{fontWeight: 'bold'}}>Email: {this.props.location.user.email}</p>\r\n                                         <p className=\"card-text\" style={{fontWeight: 'bold'}}>Points: {this.props.location.user.points + this.state.currentPoints}</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row m-2\">\r\n                        {answers.map((answer, index) => {\r\n                            return (\r\n                                <div key={index} className=\"card container-fluid\" id=\"game\" style={{ height: '25rem', width: '25rem', alignContent: 'center', backgroundColor: answer.correct === answer.answered ? '#90f5ab' : '#ed7474', marginTop: '2rem' }}>\r\n                                    <div className=\"card-body\" style={{ height: '50rem' }}>\r\n                                        <h5 className=\"card-title\">{answer.question}</h5>\r\n                                        <div className=\"list-group container-fluid\">\r\n                                        <h6>Answered:</h6> <li className=\"list-group-item\" style={{fontWeight: 'bold'}}>{answer.answered}</li>\r\n                                        <h6>Correct:</h6> <li className=\"list-group-item\" style={{fontWeight: 'bold'}}>{answer.correct}</li>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <Redirect exact to={{\r\n                        pathname: this.state.accounts,\r\n                        user: {\r\n                            email: this.props.location.user.email,\r\n                            login: this.props.location.user.login,\r\n                            points: this.props.location.user.points + this.state.currentPoints\r\n                        }\r\n                    }} />\r\n                    <Redirect exact to={{\r\n                        pathname: this.state.redirect,\r\n                        timeTaken: this.props.location.timeTaken,\r\n                        user: {\r\n                            email: this.props.location.user.email,\r\n                            login: this.props.location.user.login,\r\n                            points: this.props.location.user.points + this.state.currentPoints\r\n                        }\r\n                    }} />\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameOver","import React, {Component} from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LogOut extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n           redirect: '/accounts',\r\n           logOut: '/accounts'\r\n        }\r\n    }\r\n\r\n    logOut = async () => {\r\n        await this.setState({\r\n            logOut: '/'\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <button className=\"btn\" onClick={this.logOut} style={{ textDecoration: 'none', color: 'white' }} >LogOut</button>\r\n                <Redirect  exact to={{\r\n                    pathname: this.state.logOut,\r\n                    login: false\r\n                    }}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LogOut","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport LogOut from './LogOut'\r\n\r\nclass Accounts extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n           redirect: '/accounts'\r\n        }\r\n    }\r\n\r\n    changeRoute = async () => {\r\n        await this.setState({\r\n            redirect: '/quiz'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-dark m-2\" style={{ color: 'white' }}>Quiz Game\r\n                <button className=\"nav-item nav-link btn\" onClick={this.changeRoute} style={{ textDecoration: 'none', color: 'white' }} >Play Game</button>\r\n                <div style={{float: 'right'}}>\r\n                <LogOut />\r\n                </div>\r\n                </nav>\r\n                <div className=\"card container-fluid\" style={{ width: \"20rem\", backgroundColor: '#dedfe0' }}>\r\n                    <div className=\"card-body\">\r\n                        <h4 className=\"card-title\">Account Details</h4>\r\n                        <h6 className=\"card-subtitle mb-2 text-muted\">________________________</h6>\r\n                         <h6 className=\"card-text\" >Email: {this.props.location.user.email}</h6>\r\n                         <h6 className=\"card-text\" >Points: {this.props.location.user.points}</h6>\r\n                    </div>\r\n                </div>\r\n                <Redirect  exact to={{ pathname: this.state.redirect, user: this.props.location.user  }} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Accounts","import React, { Component } from 'react'\nimport { Switch, Route } from \"react-router-dom\"\nimport Question from './components/Question'\nimport Register from './components/Register'\nimport Login from './components/Login'\nimport Navbar from './components/Navbar'\nimport GamOver from './components/GameOver'\nimport Accounts from './components/Accounts'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      login: false\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <Switch>\n\n          <Route exact path=\"/gameover\" render={props => (<GamOver {...props} />)} />\n\n          <Route exact path=\"/\" render={props => (<Navbar {...props} />)} />\n\n          <Route exact path=\"/quiz\" render={props => (<Question {...props} />)} />\n\n          <Route exact path=\"/register\" render={props => (<Register {...props} login={this.state.login} />)} />\n\n          <Route exact path=\"/login\" render={props => (<Login {...props} login={this.state.login} />)} />\n\n          <Route exact path=\"/accounts\" render={props => (<Accounts {...props} login={this.state.login} />)} />\n\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { MemoryRouter as Router } from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\n\nReactDOM.render(\n  <Router>\n      <App />\n  </Router>\n  , document.getElementById('root'))\n"],"sourceRoot":""}